<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="18" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-09T11:58:13 EDT" name="Curahealthcare" finished-at="2023-06-09T11:58:52 EDT" duration-ms="39180">
    <groups>
    </groups>
    <test started-at="2023-06-09T11:58:13 EDT" name="TestNGTest1" finished-at="2023-06-09T11:58:52 EDT" duration-ms="39180">
      <class name="com.testCases.ReadmissionBooking">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:20 EDT" name="setup" finished-at="2023-06-09T11:58:23 EDT" duration-ms="3770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="curaHealthcareLogin()[pri:0, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:23 EDT" name="curaHealthcareLogin" finished-at="2023-06-09T11:58:25 EDT" duration-ms="1387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curaHealthcareLogin -->
        <test-method signature="selectingFacility()[pri:1, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:25 EDT" name="selectingFacility" finished-at="2023-06-09T11:58:25 EDT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectingFacility -->
        <test-method signature="checkBoxReadmission()[pri:2, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:25 EDT" name="checkBoxReadmission" finished-at="2023-06-09T11:58:25 EDT" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxReadmission -->
        <test-method signature="healthProgramOptionbtn()[pri:3, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:25 EDT" name="healthProgramOptionbtn" finished-at="2023-06-09T11:58:26 EDT" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- healthProgramOptionbtn -->
        <test-method signature="visitingDate()[pri:4, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:26 EDT" name="visitingDate" finished-at="2023-06-09T11:58:26 EDT" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- visitingDate -->
        <test-method signature="sendComment()[pri:5, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:26 EDT" name="sendComment" finished-at="2023-06-09T11:58:27 EDT" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendComment -->
        <test-method signature="readmissionConfirmation()[pri:6, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:27 EDT" name="readmissionConfirmation" finished-at="2023-06-09T11:58:27 EDT" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readmissionConfirmation -->
        <test-method is-config="true" signature="stopRecordings()[pri:0, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:27 EDT" name="stopRecordings" finished-at="2023-06-09T11:58:27 EDT" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopRecordings -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testCases.ReadmissionBooking@71a8adcf]" started-at="2023-06-09T11:58:27 EDT" name="tearDown" finished-at="2023-06-09T11:58:27 EDT" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testCases.ReadmissionBooking -->
      <class name="com.testCases.BookingAppointment">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:27 EDT" name="setup" finished-at="2023-06-09T11:58:31 EDT" duration-ms="3955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="curaHealthcareLogin()[pri:0, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:31 EDT" name="curaHealthcareLogin" finished-at="2023-06-09T11:58:32 EDT" duration-ms="1183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curaHealthcareLogin -->
        <test-method signature="bookingAppointment()[pri:1, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:32 EDT" name="bookingAppointment" finished-at="2023-06-09T11:58:33 EDT" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingAppointment -->
        <test-method signature="radioButn()[pri:2, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:33 EDT" name="radioButn" finished-at="2023-06-09T11:58:33 EDT" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioButn -->
        <test-method signature="selectingVisitDate()[pri:3, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:33 EDT" name="selectingVisitDate" finished-at="2023-06-09T11:58:34 EDT" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectingVisitDate -->
        <test-method signature="sendComment()[pri:4, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:34 EDT" name="sendComment" finished-at="2023-06-09T11:58:34 EDT" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendComment -->
        <test-method signature="bookingConfirmation()[pri:5, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:34 EDT" name="bookingConfirmation" finished-at="2023-06-09T11:58:34 EDT" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingConfirmation -->
        <test-method is-config="true" signature="stopRecordings()[pri:0, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:34 EDT" name="stopRecordings" finished-at="2023-06-09T11:58:35 EDT" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopRecordings -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testCases.BookingAppointment@51e69659]" started-at="2023-06-09T11:58:35 EDT" name="tearDown" finished-at="2023-06-09T11:58:35 EDT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testCases.BookingAppointment -->
      <class name="com.testCases.InvalidDate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testCases.InvalidDate@201a4587]" started-at="2023-06-09T11:58:35 EDT" name="setup" finished-at="2023-06-09T11:58:39 EDT" duration-ms="3893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="curaHealthcareLogin()[pri:0, instance:com.testCases.InvalidDate@201a4587]" started-at="2023-06-09T11:58:39 EDT" name="curaHealthcareLogin" finished-at="2023-06-09T11:58:40 EDT" duration-ms="1181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curaHealthcareLogin -->
        <test-method signature="invalidDate()[pri:0, instance:com.testCases.InvalidDate@201a4587]" started-at="2023-06-09T11:58:40 EDT" name="invalidDate" finished-at="2023-06-09T11:58:41 EDT" duration-ms="906" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.testCases.InvalidDate.invalidDate(InvalidDate.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDate -->
        <test-method is-config="true" signature="stopRecordings()[pri:0, instance:com.testCases.InvalidDate@201a4587]" started-at="2023-06-09T11:58:41 EDT" name="stopRecordings" finished-at="2023-06-09T11:58:41 EDT" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopRecordings -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testCases.InvalidDate@201a4587]" started-at="2023-06-09T11:58:41 EDT" name="tearDown" finished-at="2023-06-09T11:58:41 EDT" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testCases.InvalidDate -->
      <class name="com.testCases.MakeAppointmentLogin">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testCases.MakeAppointmentLogin@7bab3f1a]" started-at="2023-06-09T11:58:14 EDT" name="setup" finished-at="2023-06-09T11:58:17 EDT" duration-ms="3919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startRecording()[pri:0, instance:com.testCases.MakeAppointmentLogin@7bab3f1a]" started-at="2023-06-09T11:58:17 EDT" name="startRecording" finished-at="2023-06-09T11:58:18 EDT" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method signature="curaHealthCarelogin()[pri:0, instance:com.testCases.MakeAppointmentLogin@7bab3f1a]" started-at="2023-06-09T11:58:18 EDT" name="curaHealthCarelogin" finished-at="2023-06-09T11:58:19 EDT" duration-ms="1532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curaHealthCarelogin -->
        <test-method is-config="true" signature="stopRecordings()[pri:0, instance:com.testCases.MakeAppointmentLogin@7bab3f1a]" started-at="2023-06-09T11:58:19 EDT" name="stopRecordings" finished-at="2023-06-09T11:58:19 EDT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopRecordings -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testCases.MakeAppointmentLogin@7bab3f1a]" started-at="2023-06-09T11:58:19 EDT" name="tearDown" finished-at="2023-06-09T11:58:20 EDT" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testCases.MakeAppointmentLogin -->
      <class name="com.testCases.InvalidLogin">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:41 EDT" name="setup" finished-at="2023-06-09T11:58:45 EDT" duration-ms="3928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="curaHealthcareLogin()[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:45 EDT" name="curaHealthcareLogin" finished-at="2023-06-09T11:58:45 EDT" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curaHealthcareLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:46 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:47 EDT" duration-ms="1364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcd@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wert789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:47 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:48 EDT" duration-ms="901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:48 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:49 EDT" duration-ms="938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[passUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:49 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:50 EDT" duration-ms="1087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toolongusername1111111111111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[toolongpassword888888888888888888]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:50 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:51 EDT" duration-ms="954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[special!@user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String)[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:51 EDT" name="invalidLogin" data-provider="invalidCredentials" finished-at="2023-06-09T11:58:52 EDT" duration-ms="909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[special!@pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="stopRecordings()[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:52 EDT" name="stopRecordings" finished-at="2023-06-09T11:58:52 EDT" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopRecordings -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testCases.InvalidLogin@54a7079e]" started-at="2023-06-09T11:58:52 EDT" name="tearDown" finished-at="2023-06-09T11:58:52 EDT" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testCases.InvalidLogin -->
    </test> <!-- TestNGTest1 -->
  </suite> <!-- Curahealthcare -->
</testng-results>
